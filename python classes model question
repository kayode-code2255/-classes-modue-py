# question 1
import math

class Point3D:
    def __init__(self, x, y, z):
        self.x = x
        self.y = y
        self.z = z
    
    def coordinates(self):
        return (self.x, self.y, self.z)

# Creating an instance of Point3D and printing its coordinates
my_point = Point3D(1, 2, 3)
print(my_point.coordinates())

# quesion 2
class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self.width = width
    
    def area(self):
        return self.length * self.width
    
    def perimeter(self):
        return 2 * (self.length + self.width)

# Creating an instance of Rectangle and computing its area and perimeter
my_rectangle = Rectangle(4, 3)
print("Area:", my_rectangle.area())
print("Perimeter:", my_rectangle.perimeter())

#question 3
class Circle:
    def __init__(self, center_x, center_y, radius):
        self.center_x = center_x
        self.center_y = center_y
        self.radius = radius
    
    def area(self):
        return math.pi * self.radius ** 2
    
    def perimeter(self):
        return 2 * math.pi * self.radius
    
    def isInside(self, x, y):
        distance = math.sqrt((x - self.center_x)**2 + (y - self.center_y)**2)
        return distance <= self.radius

# Creating an instance of Circle and computing its area, perimeter, and testing a point's inclusion
my_circle = Circle(0, 0, 5)
print("Area of Circle:", my_circle.area())
print("Perimeter of Circle:", my_circle.perimeter())
print("Is point (3, 4) inside the circle?", my_circle.isInside(3, 4))

# question 4
class Bank:
    def __init__(self, balance):
        self.balance = balance
    
    def deposit(self, amount):
        self.balance += amount
    
    def withdraw(self, amount):
        if amount <= self.balance:
            self.balance -= amount
        else:
            print("Insufficient funds")

# Creating an instance of Bank and performing deposit and withdrawal operations
my_bank_account = Bank(1000)
print("Initial Balance:", my_bank_account.balance)
my_bank_account.deposit(500)
print("Balance after deposit:", my_bank_account.balance)
my_bank_account.withdraw(200)
print("Balance after withdrawal:", my_bank_account.balance)
my_bank_account.withdraw(2000)                                # Trying to withdraw more than the balance
